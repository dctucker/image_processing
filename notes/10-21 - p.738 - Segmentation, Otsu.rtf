{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 AppleSymbols;}
{\colortbl;\red255\green255\blue255;}
{\info
{\author D. Casey Tucker}}\margl1440\margr1440\vieww12360\viewh15120\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs26 \cf0 Segmentation via thresholding\
	To extract a foreground object from the background of an image\
	Bimodal histogram has two gaussian humps\
		One is background, one is foreground\
			Segmentation is easy using threshold to separate the two\
		Global thresholding\
			g(x,y) =	\{ 1	if f(x,y) > T\
					\{ 0	if f(x,y) \uc0\u8804  T\
		Variable thresholding\
			Sxy : g(x,y) =	\{ 1	if Sxy > Txy\
						\{ 0	if Sxy \uc0\u8804  Txy\
\
		const a,b,c: a=0, b=0.5, c=1\
		g(x,y) =	\{ a	if f(x,y) \uc0\u8804  T\u8321 \
				\{ b	if f(x,y) \uc0\u8804  T\u8322 \
				\{ c	if f(x,y) > T\uc0\u8322 \
	\
	Global Thresholding\
		1. Select an initial guess\
			T = (L - 1) / 2\
		2. Segment the image with T creating two groups of pixels\
			G\uc0\u8321  
\f1 \uc0\u8801 
\f0  intensity values > T\
			G\uc0\u8322  
\f1 \uc0\u8801 
\f0  intensity values \uc0\u8804  T\
		3. Compute the average intensity value for the two groups\
			m\uc0\u8321  = avg(G\u8321 ), m\u8322  = avg(G\u8322 )\
		4. Compute new threshold value\
			T = (m\uc0\u8321  + m\u8322 ) / 2\
		5. Repeat steps 2~4 until \uc0\u8710 T is some minimum\
\
			10	20	30	30	20	20\
			10	20	30	60	60	20\
			10	20	30	60	60	20\
			5	20	50	60	60	20\
			5	30	10	40	60	20\
			5	30	10	10	10	20\
		Example\
			Histogram\
			5	3\
			10	7\
			20	11\
			30	5\
			40	0\
			50	2\
			60	8\
			1. T = 31\
			2. G\uc0\u8321  = \{50, 60\}, G\u8322  = \{5, 10, 20, 30\}\
			3. m\uc0\u8321  = 58, m\u8322  = 17.5\
			4. T = (58 + 17.5) / 2 = 38\
\
Otsu's method (p.742)\
	Is an approximation of the Bayes Rule (discriminant analysis) as applied to\
		intensity values of an image such that the goal is the separate\
			the background and foreground into two separate classes\
\
	C\uc0\u8321  = [0,k], C\u8322  = [k+1, L-1]\
	T(k) = k\
	P_i is normalized probabilty\
	p_i = n_i / MN\
	P\uc0\u8321 (k) is the probability that a pixel is assigned to C\u8321 \
			k\
	P\uc0\u8321 (k) =	\u8721 	p_i (cumulative sum)\
			i=0\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tqc\tx4700\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs20 \cf0 							k\

\fs26 	Mean(C\uc0\u8321 ) = m\u8321 (k) = (1 / P\u8321 (k))	\u8721 	i * p_i\

\fs20 							i=0\

\fs26 \
	P\uc0\u8322 (k) = \u8721 [i=k+1..L-1] p_i = 1 - P\u8321 (k)\

\fs20 \
							L-1\

\fs26 	Mean(C\uc0\u8322 ) = m\u8322 (k) = (1 / P\u8322 (k))	\u8721 	i * p_i\

\fs20 							i=k+1\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs26 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tqc\tx3800\tx4140\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs20 \cf0 					L-1\

\fs26 	Image average m_G =	\uc0\u8721 	i * p_i\

\fs20 					i=0\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs26 \cf0 	\uc0\u951  = \u963 \'b2_B / \u963 \'b2_G = between-class variance / global variance\
	\uc0\u963 \'b2_G = \u8721 [i=0..L-1] (i-m_G)\'b2p_i\
	\uc0\u963 \'b2_B = (m_G P\u8321  - m)\'b2 / P\u8321 (1-P\u8321 )\
	\uc0\u951  = 0 at constant intensity\
\
	Algorithm\
\pard\tx720\tx1440\tx2160\tx2880\tqc\tx3240\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 		1. Compute normalized histogram\
			Denote the components of the histogram by p_i, i=0,1,2,..,L-1\
			Normalized hist = \uc0\u8721  n_i / MN\
		2. Compute the cumulative sums\

\fs20 					k
\fs26 \
			P\uc0\u8321 (k) =	\u8721 	p_i | k = 0,1,2,..,L-1\

\fs20 					i=0
\fs26 \
		3. Compute cumulative measure\

\fs20 					k
\fs26 \
			m(k) =	\uc0\u8721 	i * p_i\

\fs20 					i=0
\fs26 \
		4. Compute the global intensity mean\

\fs20 					L-1
\fs26 \
			m_G =	\uc0\u8721 	i * p_i\

\fs20 					i=0
\fs26 \
		5. Compute between-class variance\
			\uc0\u963 \'b2_B(k) =	[ m_G * P\u8321 (k) - m(k) ]\'b2 / \
							P\uc0\u8321 (k) [ 1 - P\u8321 (k) ]\
		6. Obtain Otsu threshold k* as the value of k for which \uc0\u963 \'b2_B(k) is maximum\
			k* = k where \uc0\u963 \'b2_B(k) = max(\u963 \'b2_B)\
		7. Obtain separability measure \uc0\u951 *\
			\uc0\u951 (k) = \u963 \'b2_B(k) / \u963 \'b2_G	| k = k*	| \u951  
\f1 \uc0\u8712 
\f0  [0,1]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
Region splitting and merging\
	Quad trees\
		R = full image. R\uc0\u8321  = up/left, R\u8322  = up/right, R\u8323  = down/left, R\u8324  = down/right\
		R\uc0\u8324 \u8321  = up/left of R\u8324 \
	1. Split into four disjoint quadrants R_i for which predicate Q(R_i) is false\
	2. When no further splitting is possible, merge any adjacent Regions R_j and R_k\
		for which Q(R_j 
\f1 \uc0\u8746 
\f0  R_k) is true\
	3. Stop when no further merging is possible\
		Limit the depth of splitting e.g. to 16 x 16 | 4x4 pixels\
	\
	Q =	\{ true if \uc0\u963  > a && 0 < m < b\
		\{ false otherwise\
\
	m = mean of quad tree\
	\uc0\u963  = standard deviation of tree\
	a,b = constants\
}